name: Build and Release

on:
  push:
    tags:
      - 'v*' # trigger on version tags

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build release
        run: cargo build --release

      - name: Package binary (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir -p dist
          cp target/release/c2h dist/
          tar czvf c2h-${{ runner.os }}-${{ github.ref_name }}.tar.gz -C dist c2h
        shell: bash

      - name: Package binary (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir dist
          copy target\release\c2h.exe dist\
          7z a c2h-${{ runner.os }}-${{ github.ref_name }}.zip .\dist\c2h.exe
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: c2h-${{ runner.os }}-${{ github.ref_name }}
          path: |
            *.tar.gz
            *.zip

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: .

      - name: Flatten artifacts
        run: |
          find . -type f -name "*.tar.gz" -exec mv {} . \;
          find . -type f -name "*.zip" -exec mv {} . \;

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.tar.gz
            *.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish to crates.io
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_API_TOKEN }}
        run: cargo publish
